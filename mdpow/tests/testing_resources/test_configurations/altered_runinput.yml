# default run input file for the the equilibrium simulation
# values can be overriden from your own configuration file

# XXX maybe define which queuing system to submit to, so that this can be
# XXX done automatically through GromacsWrapper.


DEFAULT:
    qscripts: custom.sh

setup:
    name: custom_name
         # common, descriptive name, e.g. benzene
    molecule: some_molecule_ident
         # Gromacs [ molecule ] identifier from the itp file (typically a 3-letter code)
    itp: some_molecules_itp
         # Gromacs itp file name 
    structure: some_molecules_structure
         # coordinate file name (pdb, gro, ... anything that Gromacs can read)
    watermodel: spce
         # water model available in Gromacs (OPLS-AA):
         # tip4p, tip5p, tip3p, spc, spce, m24, tip4pd              
    maxwarn: 2
         # maximum number of warnings tolerated by grompp during setup
    gromacsoutput: True
         # True: print output from Gromacs command to screen (useful for debugging)
         # False: only show the MDPOW messages

energy_minimize:
    mdp: custom_emin.mdp
         # run parameter file for Gromacs;
         # (will be searched as (1) absolute path, (2) in current directory (3)
         # in the package templates)

MD_relaxed:
    qscript: MD_relaxed.sge
         # queuing system scripts to produce
    runlocal: False
         # True: launch Gromacs mdrun and wait for it
         # False: produce queuing system scripts and stop
    runtime: 10
         # run time in ps
    mdp: MD_relaxed_NPT_opls.mdp
         #  run parameter file for Gromacs;
         # (will be searched as (1) absolute path, (2) in current directory (3)
         # in the package templates)
         # special index groups  __main__ __environment__ can be used

MD_NPT:
    qscript: MD_NPT.sge
         # queuing system scripts to produce
    runtime: 10000
         # simulation run time in ps [50 ns is generous, probably can be shorter]
    runlocal: True
         # True: launch Gromacs mdrun and wait for it
         # False: produce queuing system scripts and stop
    mdp: MD_NPT_opls.mdp
         # run parameter file for Gromacs;
         # (will be searched as (1) absolute path, (2) in current directory (3)
         # in the package templates)
         # special index groups  __main__ __environment__ can be used

FEP:
    method: TI
         # BAR or TI
    qscript: FEP.sge
         # queuing system scripts to produce
    runtime: 1000
         # run time in ps for each free energy window
    runlocal: True
         # True: launch Gromacs mdrun and run all windows in a serial fashion
         # False: produce queuing system scripts and stop
    maxwarn: 3
         # maximum number of warnings tolerated by grompp during setting up FEP runs
         # Set to 1 if you want to ignore the warning (in 4.6.x):
         #
         # WARNING 1 [file md.mdp]:
         #  With coulomb soft core, the reciprocal space calculation will not
         #  necessarily cancel.  It may be necessary to decrease the reciprocal space
         #  energy, and increase the cutoff radius to get sufficiently close matches
         #  to energies with free energy turned off.
    mdp: fep_custom_opls.mdp
         # run parameter file for Gromacs;
         # (will be searched as (1) absolute path, (2) in current directory (3)
         # in the package templates)
         # special index groups  __main__ __environment__ can be used

FEP_schedule_Coulomb:
    name: Coul
    description: transition_1
    label: coulomb
    couple_lambda0: vdw
    couple_lambda1: vdw-q
         # soft core alpha: linear scaling for coulomb (sc_alpha = 0)
         # ignore the other sc_*
    sc_alpha: .2
    sc_power: 2
    sc_sigma: 0.6
    lambdas: 0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1.

FEP_schedule_VDW:
    name: VANDERWAALS
    description: transition_2
    label: vanderwaals
    couple_lambda0: none
    couple_lambda1: vdw
         # recommended values for soft cores (Mobley, Shirts et al)
    sc_alpha: 0
    sc_power: 3 
    sc_sigma: 0.1
    lambdas: 0.0, 0.25, 0.50, 0.75, 1.


mdrun:
        # options to control a mdrun process
    stepout: 12000
         # how often to report progress (-stepout)
    verbose: False
         # report progress verbosely (True is -v)
    nice: 12
         # nicel level
    maxthreads: 1
         # maximum number of threads (-nt), 0 or None lets mdrun automatically choose
