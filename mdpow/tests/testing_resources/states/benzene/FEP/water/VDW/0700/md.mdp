; Gromacs mdp file
; Template for MD Hydration FEP with OPLS-AA (part of POW)
;
; grompp -pp -c ../../../MD_POSRES/md.gro -p ../../../top/system.top -f fep_opls.mdp -o md.tpr


include                  =   -I. -I.. -I/nfs/homes3/alescoul/benzene_mdpow/benzene/Equilibrium/water/top -I/nfs/homes3/alescoul/.local/lib/python2.7/site-packages/mdpow/top
define                   =

integrator               = sd
tinit                    = 0.0
dt                       = 0.002
nsteps                   = 12500

nstxout                  = 5000
nstvout                  = 5000
nstfout                  = 0
; Output frequency for energies to log file and energy file
nstlog                   = 500
nstenergy                = 200
; Output frequency and precision for xtc file
nstxtcout                = 250
xtc-precision            = 1000


comm-mode                = Linear
nstcomm                  = 100
comm-grps                = SYSTEM

; Selection of energy groups
energygrps               = __main__ __environment__


; NEIGHBORSEARCHING PARAMETERS
; nblist update frequency
nstlist                  = 5
; ns algorithm (simple or grid)
ns_type                  = grid
; Periodic boundary conditions: xyz, no, xy
pbc                      = xyz
periodic_molecules       = no
; nblist cut-off
rlist                    = 1.0

; OPTIONS FOR ELECTROSTATICS AND VDW
; Method for doing electrostatics
coulombtype              = PME
rcoulomb-switch          = 0
rcoulomb                 = 1.0
; Relative dielectric constant for the medium and the reaction field
epsilon_r                = 1
epsilon_rf               = 1
; Method for doing Van der Waals
vdw-type                 = Cut-off
; cut-off lengths
rvdw-switch              = 0
rvdw                     = 1.0
; Apply long range dispersion corrections for Energy and Pressure
DispCorr                 = EnerPres
; Seperate tables between energy group pairs
energygrp_table          =
; Spacing for the PME/PPPM FFT grid
fourierspacing           = 0.12
; FFT grid size, when a value is 0 fourierspacing will be used
fourier_nx               = 0
fourier_ny               = 0
fourier_nz               = 0
; EWALD/PME/PPPM parameters
pme_order                = 6
ewald_rtol               = 1e-06
ewald_geometry           = 3d
epsilon_surface          = 0
optimize_fft             = yes

; OPTIONS FOR WEAK COUPLING ALGORITHMS
; Temperature coupling (use Langevin for free energy calculations, see
; Mobley and Shirt papers)
Tcoupl                   = no
; Note that we have the SD integrator AND set bd_fric=0 hence the
; friction coefficient is particle-dependent: mass/tau_t
; (There wasn't really a compelling reason for doing this instead of
; setting bd_fric = 10 apart from the fact that bd_fric=0/tau_t=0.1
; was the default setting in Gromacs. -- OB 2011-06-29)
tau_t                    = 0.1
tc-grps                  = System
ref_t                    = 300.0
Pcoupl                   = Parrinello-Rahman
Pcoupltype               = isotropic
compressibility          = 4.6e-5
tau_p                    = 1.0
ref_p                    = 1.0

; GENERATE VELOCITIES FOR STARTUP RUN
gen_vel                  = yes
gen-temp                 = 300.0
gen_seed                 = 175547

; Generate a random starting seed for Langevin
; (required for restarts, according to the manual)
ld_seed                  = -1
; Brownian dynamics friction coefficient [amu/ps]. When bd_fric=0, the friction
; coefficient for each particle is calculated as mass/tau_t.
bd_fric                  =  0

; OPTIONS FOR BONDS
constraints              = h-bonds
constraint-algorithm     = Lincs
lincs-order              = 12
lincs-iter               = 1

; Free energy control stuff
free_energy              = yes
separate-dhdl-file       = no
;  init for bar
init_lambda_state        = 9
;  fep lam for bar
fep_lambdas		 = 0.0 0.05 0.1 0.2 0.3 0.4 0.5 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0
calc-lambda-neighbors    = -1
sc_alpha                 = 0.5
sc-power                 = 1
sc-sigma                 = 0.3

; for decoupling
couple-moltype = BNZ

; decharging free energy
;    couple-lambda0 = vdw-q
;    couple-lambda1 = vdw
; LJ decoupling free energy
;    couple-lambda0 = vdw
;    couple-lambda1 = none
;
; fully coupled (change for BAR!)
couple-lambda0 = vdw
couple-lambda1 = none


; no = decoupling (intra-molecular interactions remain)
; yes = annihilation (all selected interactions are removed)
; An additional vacuum simulation is required for 'yes'.
couple-intramol = no
